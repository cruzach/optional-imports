{"version":3,"sources":["useConfirmPayment.tsx"],"names":["useCallback","useState","useStripe","useConfirmPayment","loading","setLoading","confirmPayment","confirmPaymentMethod","paymentIntentClientSecret","data","options","result"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAEA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,GAA6B;AAClC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEK,IAAAA,cAAc,EAAEC;AAAlB,MAA2CL,SAAS,EAA1D;AAEA,QAAMI,cAAc,GAAGN,WAAW,CAChC,OACEQ,yBADF,EAEEC,IAFF,EAGEC,OAAoC,GAAG,EAHzC,KAIK;AACHL,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAMM,MAAM,GAAG,MAAMJ,oBAAoB,CACvCC,yBADuC,EAEvCC,IAFuC,EAGvCC,OAHuC,CAAzC;AAMAL,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,WAAOM,MAAP;AACD,GAjB+B,EAkBhC,CAACJ,oBAAD,CAlBgC,CAAlC;AAqBA,SAAO;AACLD,IAAAA,cADK;AAELF,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useCallback, useState } from 'react';\nimport type { CreatePaymentMethod } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useConfirmPayment hook\n */\nexport function useConfirmPayment() {\n  const [loading, setLoading] = useState(false);\n  const { confirmPayment: confirmPaymentMethod } = useStripe();\n\n  const confirmPayment = useCallback(\n    async (\n      paymentIntentClientSecret: string,\n      data: CreatePaymentMethod.Params,\n      options: CreatePaymentMethod.Options = {}\n    ) => {\n      setLoading(true);\n\n      const result = await confirmPaymentMethod(\n        paymentIntentClientSecret,\n        data,\n        options\n      );\n\n      setLoading(false);\n\n      return result;\n    },\n    [confirmPaymentMethod]\n  );\n\n  return {\n    confirmPayment,\n    loading,\n  };\n}\n"]}